<style lang="less">
  .searchBox {
    width: 90%;
    height: 40px;
    border: solid 1px gray;
    margin: auto;
    padding: 10px;
  }
  .list {
    padding: 10px 0;
  }
</style>
<template>
  <view>
    <view>
      <input class="searchBox" placeholder="键入自动搜索" @input="bindInput" value="{{inputValue}}"/>
    </view>
    <view class="list">
      <repeat for="{{dataList}}" key="index" >
        <item :value="item"></item>
      </repeat>
    </view>
    <author></author>
  </view>
</template>
<script>
  import wepy from 'wepy'
  import keywordMatch from '../libs/keywordMatch'

  import Item from '../components/item'
  import Author from '../components/authorInfo'
  import getData from '../constants/data'
  import observer from '../libs/observer'

  export default class Home extends wepy.page {
    config = {
      navigationBarTitleText: '银行人工电话速查'
    }
    components = {
      item: Item,
      author: Author
    }
    data = {
      dataList: getData(),
      inputValue: ''
    }
    customData = {
      storedDataList: getData()
    }
    methods = {
      bindInput (e) {
        this.inputValue = e.detail.value
        const result = keywordMatch(this.customData.storedDataList, e.detail.value)
        this.dataList = result.length === 0 ? this.customData.storedDataList : result
      }
    }
    onLoad() {
      observer.observe(this, (stores) => {
        var newList = getData()
        var starredItems = stores.starredItem.list.map(item => {
          item.starred = true
          return item
        })
        stores.starredItem.list.forEach(item => {
          const index = newList.findIndex(element => { return element.id === item.id })
          if (index !== -1) {
            newList.splice(index, 1)
          }
        })
        newList = starredItems.concat(newList)
        this.dataList = newList
        this.customData.storedDataList = newList
        this.$apply()
      })
    }
    onShareAppMessage() {
      return {
        title: '银行人工电话速查',
        path: '/pages/home'
      }
    }
  }
</script>
